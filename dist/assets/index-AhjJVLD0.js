(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function a(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=a(i);fetch(i.href,r)}})();const v=[{image:{thumbnail:"./assets/images/image-waffle-thumbnail.jpg",mobile:"./assets/images/image-waffle-mobile.jpg",tablet:"./assets/images/image-waffle-tablet.jpg",desktop:"./assets/images/image-waffle-desktop.jpg"},name:"Waffle with Berries",category:"Waffle",price:6.5},{image:{thumbnail:"./assets/images/image-creme-brulee-thumbnail.jpg",mobile:"./assets/images/image-creme-brulee-mobile.jpg",tablet:"./assets/images/image-creme-brulee-tablet.jpg",desktop:"./assets/images/image-creme-brulee-desktop.jpg"},name:"Vanilla Bean Crème Brûlée",category:"Crème Brûlée",price:7},{image:{thumbnail:"./assets/images/image-macaron-thumbnail.jpg",mobile:"./assets/images/image-macaron-mobile.jpg",tablet:"./assets/images/image-macaron-tablet.jpg",desktop:"./assets/images/image-macaron-desktop.jpg"},name:"Macaron Mix of Five",category:"Macaron",price:8},{image:{thumbnail:"./assets/images/image-tiramisu-thumbnail.jpg",mobile:"./assets/images/image-tiramisu-mobile.jpg",tablet:"./assets/images/image-tiramisu-tablet.jpg",desktop:"./assets/images/image-tiramisu-desktop.jpg"},name:"Classic Tiramisu",category:"Tiramisu",price:5.5},{image:{thumbnail:"./assets/images/image-baklava-thumbnail.jpg",mobile:"./assets/images/image-baklava-mobile.jpg",tablet:"./assets/images/image-baklava-tablet.jpg",desktop:"./assets/images/image-baklava-desktop.jpg"},name:"Pistachio Baklava",category:"Baklava",price:4},{image:{thumbnail:"./assets/images/image-meringue-thumbnail.jpg",mobile:"./assets/images/image-meringue-mobile.jpg",tablet:"./assets/images/image-meringue-tablet.jpg",desktop:"./assets/images/image-meringue-desktop.jpg"},name:"Lemon Meringue Pie",category:"Pie",price:5},{image:{thumbnail:"./assets/images/image-cake-thumbnail.jpg",mobile:"./assets/images/image-cake-mobile.jpg",tablet:"./assets/images/image-cake-tablet.jpg",desktop:"./assets/images/image-cake-desktop.jpg"},name:"Red Velvet Cake",category:"Cake",price:4.5},{image:{thumbnail:"./assets/images/image-brownie-thumbnail.jpg",mobile:"./assets/images/image-brownie-mobile.jpg",tablet:"./assets/images/image-brownie-tablet.jpg",desktop:"./assets/images/image-brownie-desktop.jpg"},name:"Salted Caramel Brownie",category:"Brownie",price:4.5},{image:{thumbnail:"./assets/images/image-panna-cotta-thumbnail.jpg",mobile:"./assets/images/image-panna-cotta-mobile.jpg",tablet:"./assets/images/image-panna-cotta-tablet.jpg",desktop:"./assets/images/image-panna-cotta-desktop.jpg"},name:"Vanilla Panna Cotta",category:"Panna Cotta",price:6.5}];var n=[];for(var h=0;h<256;++h)n.push((h+256).toString(16).slice(1));function f(e,t=0){return(n[e[t+0]]+n[e[t+1]]+n[e[t+2]]+n[e[t+3]]+"-"+n[e[t+4]]+n[e[t+5]]+"-"+n[e[t+6]]+n[e[t+7]]+"-"+n[e[t+8]]+n[e[t+9]]+"-"+n[e[t+10]]+n[e[t+11]]+n[e[t+12]]+n[e[t+13]]+n[e[t+14]]+n[e[t+15]]).toLowerCase()}var u,q=new Uint8Array(16);function _(){if(!u&&(u=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!u))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return u(q)}var j=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);const y={randomUUID:j};function L(e,t,a){if(y.randomUUID&&!t&&!e)return y.randomUUID();e=e||{};var s=e.random||(e.rng||_)();return s[6]=s[6]&15|64,s[8]=s[8]&63|128,f(s)}const m=class m{static calculateTotals(){this._orderTotal=this._products.reduce((t,a)=>t+a.total,0),this._quantityTotal=this._products.reduce((t,a)=>t+a.quantity,0)}static removeProduct(t){this._products=this._products.filter(a=>a.id!==t.id),this.calculateTotals(),this.updateCartUI()}static addToCart(t){const a=this._products.find(s=>s.id===t.id);a?a.quantity=t.quantity:this._products.push(t),this.calculateTotals(),this.updateCartUI()}static updateCartUI(){const t=document.querySelector(".product-cart");if(!t)return;const a=t.querySelector(".title-cart span"),s=t.querySelector(".list-cart"),i=t.querySelector(".product-empty-cart"),r=t.querySelector(".product-cart-message"),o=t.querySelector(".order-total-cart"),c=t.querySelector(".carbon-neutral-cart"),d=t.querySelector(".confirm-order-cart");a&&(a.textContent=this._quantityTotal.toString()),s&&(s.innerHTML=""),this._products.length===0?(i==null||i.classList.remove("hidden"),r==null||r.classList.remove("hidden"),o==null||o.classList.add("hidden"),c==null||c.classList.add("hidden"),d==null||d.classList.add("hidden")):(i==null||i.classList.add("hidden"),r==null||r.classList.add("hidden"),this._products.forEach(l=>{var b;const p=document.createElement("li");p.innerHTML=`
          <div class="product-list-cart">
            <span class="product-cart-name">${l.name}</span>
            <div class="product-cart-infos">
              <span class="product-cart-quantity">${l.quantity}x</span>
              <span class="product-cart-price">@ $${l.price.toFixed(2)}</span>
              <span class="product-cart-total">$${l.total.toFixed(2)}</span>
              <img class="product-cart-icon" src="/assets/images/icon-remove-item.svg" alt="Remove item">
            </div>
          </div>
          <hr/>
        `,(b=p.querySelector(".product-cart-icon"))==null||b.addEventListener("click",()=>{this.removeProduct(l)}),s==null||s.appendChild(p)}),o&&(o.classList.remove("hidden"),o.innerHTML=`
          <div class="order-total-cart">
            <span class="order-total-msg"><p>Order Total</p></span>
            <span class="order-total-value">$${this._orderTotal.toFixed(2)}</span>
          </div>
        `),c&&(c.classList.remove("hidden"),c.innerHTML=`
          <div class="carbon-neutral-cart">
            <img src="/assets/images/icon-carbon-neutral.svg" alt="Carbon neutral" />
            <p class="carbon-neutral-msg">This is a <strong>carbon-neutral</strong> delivery</p>
          </div>
        `),d&&(d.classList.remove("hidden"),d.innerHTML=`
          <div>
            <button class="btn-confirm-order-cart">Confirm Order</button>
          </div>
        `))}static get products(){return[...this._products]}static get total(){return this._orderTotal}static get quantityTotal(){return this._quantityTotal}};m._products=[],m._orderTotal=0,m._quantityTotal=0;let g=m;class k{constructor(t,a,s,i){this._name=t,this._price=a,this._category=s,this._imageUrl=i,this._id=L(),this._quantity=1,this._total=0,this.updateTotal()}get id(){return this._id}get total(){return this._total}get quantity(){return this._quantity}set quantity(t){t>=1&&(this._quantity=t,this.updateTotal())}get name(){return this._name}get price(){return this._price}updateTotal(){this._total=this._price*this._quantity}updateCart(){this._quantity>=1?g.addToCart(this):g.removeProduct(this)}incrementQuantity(){this.quantity++,this.updateCart()}decrementQuantity(){this.quantity>1&&(this.quantity--,this.updateCart())}updateContent(t){t.innerHTML=`
      <div id="decrement"><img class="icons-qtd" src="/assets/images/icon-decrement-quantity.svg" alt="Decrementar quantidade"></div>
      ${this.quantity} 
      <div id="increment"><img class="icons-qtd" src="/assets/images/icon-increment-quantity.svg" alt="Incrementar quantidade"></div>
    `}render(){const t=document.createElement("li");t.className="product",t.id=this._id,t.innerHTML=`
      <div class="product-shop">
        <img class="product-image" src="${this._imageUrl}" alt="${this._name}" />
        <button class="product-btn">
          <img src="/assets/images/icon-add-to-cart.svg" alt="Adicionar ao carrinho">
          <p>Add to Cart</p> 
        </button>
      </div>
      <div class="product-infos">
        <span class="product-category">${this._category}</span>
        <span class="product-name">${this._name}</span>
        <span class="product-price">R$ ${this._price.toFixed(2)}</span>
      </div>
    `;const a=document.querySelector("#product-list");a?(a.appendChild(t),this.attachEvents(t)):console.error("Elemento #product-list não encontrado no DOM.")}attachEvents(t){const a=t.querySelector(".product-btn"),s=t.querySelector(".product-image");a&&a.addEventListener("click",()=>{a.classList.replace("product-btn","qtd-food"),this.updateContent(a),s==null||s.classList.add("bordered"),this.updateCart(),this.addQuantityControls(a)})}addQuantityControls(t){const a=t.querySelector("#increment"),s=t.querySelector("#decrement");a==null||a.addEventListener("click",()=>{this.incrementQuantity(),this.updateContent(t)}),s==null||s.addEventListener("click",()=>{this.decrementQuantity(),this.updateContent(t)})}}document.addEventListener("DOMContentLoaded",()=>{for(const e of v)new k(e.name,e.price,e.category,e.image.desktop).render()});
